/* /////////////////////////////////////
// TABLE OF CONTENTS
////////////////////////////////////////

- VARIABLES
- CONTAINER
- ROW & COLUMN
- DISPLAY MIXINS

///////////////////////////////////// */


/* /////////////////////////////////////
// VARIABLES
///////////////////////////////////// */

@columns: 12;
@gutter-width: 20px;
@include-gutters: true;

@width-mobile:  320px;
@width-tablet:  660px;
@width-desktop: 960px;


/* /////////////////////////////////////
// CONTAINER
///////////////////////////////////// */

.container {
	margin: 0 auto;
	width: @width-mobile;

	@media screen and (min-width: @width-tablet) {
		width: @width-tablet;
	}

	@media screen and (min-width: @width-desktop) {
		width: @width-desktop;
	}
}


/* /////////////////////////////////////
// ROWS & COLUMNS
///////////////////////////////////// */

.row() {
	.clear;
}


// DEFAULT COLUMN PROPERTIES
.col(@span, @gutter: @include-gutters, @device: mobile) {
	float: left;
	display: block;
	.border-box;
}

// FUNCTION TO GET COLUMN WIDTH
.col-width(@span, @gutter) when not (@span = @columns) and (@gutter = true) {
	@total-columns: @columns / @span;
	@total-gutters: @total-columns - 1;
	@total-gutters-width: @total-gutters * @gutter-width;

	width: -webkit-calc(~"(100% - "@total-gutters-width~") / "@total-columns);
	width: calc(~"(100% - "@total-gutters-width~") / "@total-columns);
	margin-right: @gutter-width;
}

.col-width(@span, @gutter) when not (@span = @columns) and (@gutter = false) {
	width: (100% * @span / @columns);
}

.col-width(@span, @gutter) when (@span = @columns) {
	width: 100%;
}

// SET COLUMN WIDTH
.col(@span, @gutter: @include-gutters, @device: mobile) when (@device = mobile) {
	.col-width(@span, @gutter);
	&:last-child { margin-right: 0; }
}

.col(@span, @gutter: @include-gutters, @device: mobile) when (@device = tablet) {
	@media screen and (min-width: @width-tablet) {
		.col-width(@span, @gutter);
		&:last-child { margin-right: 0; }
	}
}

.col(@span, @gutter: @include-gutters, @device: mobile) when (@device = desktop) {
	@media screen and (min-width: @width-desktop) {
		.col-width(@span, @gutter);
		&:last-child { margin-right: 0; }
	}
}


// FUNCTION TO GET COLUMN OFFSET
.offset-width(@span) when not (@span = @columns) {
	@total-columns: @columns / @span;
	@total-gutters: @total-columns - 1;
	@total-gutters-width: @total-gutters * @gutter-width;

	margin-left: -webkit-calc(~"(100% - "@total-gutters-width~") / "@total-columns~" + "@gutter-width);
	margin-left: calc(~"(100% - "@total-gutters-width~") / "@total-columns~" + "@gutter-width);
}

// SET OFFSET WIDTH
.offset(@span, @device: mobile) when (@device = mobile) {
	.offset-width(@span);
}

.offset(@span, @device: mobile) when (@device = tablet) {
	@media screen and (min-width: @width-tablet) {
		.offset-width(@span);
	}
}

.offset(@span, @device: mobile) when (@device = desktop) {
	@media screen and (min-width: @width-desktop) {
		.offset-width(@span);
	}
}


/* /////////////////////////////////////
// DISPLAY MIXINS
///////////////////////////////////// */

// HIDE ALL
.hide(@device: all) when (@device = all) {
	display: none;
}

// HIDE ONLY MOBILE
.hide(@device: all) when (@device = mobile) {
	@media screen and (max-width: @width-tablet) {
		display: none;
	}
}

// HIDE ONLY TABLET
.hide(@device: all) when (@device = tablet) {
	@media screen and (min-width: @width-tablet) and (max-width: @width-desktop) {
		display: none;
	}
}

// HIDE ONLY DESKTOP
.hide(@device: all) when (@device = desktop) {
	@media screen and (min-width: @width-desktop) {
		display: none;
	}
}
